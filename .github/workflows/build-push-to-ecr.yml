name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main 
      - develop

env:
  ECR_REPOSITORY: "core"
  IMAGE_TAG: barriermodel-${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}-v${{ github.run_number }}

jobs:
  build-and-push:
    runs-on: organization-build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Write the variable to a file
      run: |
        whoami

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
          
    - name: Build, tag, and push image to Amazon ECR
      id: ci-ecr
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: chatbot-django-${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}-v${{ github.run_number }}
      run: |
        echo "Image tag: $IMAGE_TAG"
        # Build the Docker image
        docker build --cache-from 905418288207.dkr.ecr.eu-west-1.amazonaws.com/core:chatbot-django-prod-v66 -t $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG} .

        # Push the Docker image to the registry
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}
          
    - name: Output image URL
      run: echo "The image tag $IMAGE_TAG"

    - name: Write the variable to a file
      run: |
        cd /home/ubuntu/runner-artifacts
        echo ${{ env.IMAGE_TAG }} > image_tag.txt

    - name: Upload the variable as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: image-tag-artifact
        path: /home/ubuntu/runner-artifacts

    - name: Print working directory after downloading artifact
      run: pwd

    - name: List contents of the runner-artifacts directory
      run: ls -l /home/ubuntu/runner-artifacts      